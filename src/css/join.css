.join:where(.join-item) {
	border-start-end-radius: 0;
	border-end-end-radius: 0;
	border-end-start-radius: 0;
	border-start-start-radius: 0;
}

.join .join-item:not(:first-child):not(:last-child),
.join *:not(:first-child):not(:last-child) .join-item {
	border-start-end-radius: 0;
	border-end-end-radius: 0;
	border-end-start-radius: 0;
	border-start-start-radius: 0;
}

.join .join-item:first-child:not(:last-child),
.join *:first-child:not(:last-child) .join-item {
	border-start-end-radius: 0;
	border-end-end-radius: 0;
}

.join dropdown .join-item:first-child:not(:last-child),
.join *:first-child:not(:last-child) .dropdown .join-item {
	border-start-end-radius: inherit;
	border-end-end-radius: inherit;
}

.join:where(.join-item:first-child:not(:last-child)),
.join:where(*:first-child:not(:last-child) .join-item) {
	border-end-start-radius: inherit;
	border-start-start-radius: inherit;
}

.join .join-item:last-child:not(:first-child),
.join *:last-child:not(:first-child) .join-item {
	border-end-start-radius: 0;
	border-start-start-radius: 0;
}

.join:where(.join-item:last-child:not(:first-child)),
.join:where(*:last-child:not(:first-child) .join-item) {
	border-start-end-radius: inherit;
	border-end-end-radius: inherit;
}

.join {
	@apply inline-flex items-stretch;
}

@supports not selector(:has(*)) {
	:where(.join *) {
		@apply rounded-[inherit];
	}
}

@supports selector(:has(*)) {
	:where(.join *:has(.join-item)) {
		@apply rounded-[inherit];
	}
}

.join.join-vertical > :where(*:not(:first-child)) {
	@apply mx-0 -mt-px;
}
.join.join-horizontal > :where(*:not(:first-child)) {
	@apply my-0 -ms-px;
}
